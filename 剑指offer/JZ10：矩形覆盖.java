/*
    - 题目描述：我们可以用2*1的小矩形横着或者竖着去覆盖更大的矩形。请问用n个2*1的小矩形无重叠地覆盖一个2*n的大矩形，从同一个方向看总共有多少种不同的方法？
    - 知识点：动态规划
    - 题目解析：小矩形只有横放或竖放两种方式，假设大矩形前面部分填充完毕，后面部分待填充。
              （1）如果空位只有一个，那么只能竖放；
              （2）如果空位有两个，那么可以竖放或横放；
              （3）如果空位有三个，那么可以先竖放一个，变成（2），也可以横放2个，变成（1）
              （4）如果空位有更多，最终都会变成（1）或（2）
              因此可以得到递归公式 f[n] = f[n - 1] + f[n - 2]
    - 代码分析：只需要记录前面两个状态，因此可进行空间优化
 */



public class Solution {
    public int rectCover(int target) {
        if(target <= 2) return target;
        int[] momo = new int[target + 1];
        momo[1] = 1;
        momo[2] = 2;
        for(int i = 3; i <= target; i++){
            momo[i] = momo[i - 2] + momo[i - 1];
        }
        return momo[target];
    }
}